+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	 This shell script runs the GlobalPhone+X-vectors recipe.
 	 Use like this: ./gp-xvectors-recipe/run.sh <options>
 	 --home-dir=DIRECTORY	Main directory where recipe is stored 	 --config=FILE	Config file with all kinds of options,
 	 			see conf/exp_default.conf for an example.
 	 			NOTE: Where arguments are passed on the command line,
 	 			the values overwrite those found in the config file.

 	 If no stage number is provided, either all stages
 	 will be run (--run-all=true) or no stages at all.
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Running experiment: 'lre_tr_500_en_5000'
Running all stages starting with 1.
Running locally.
Paul's machine, don't need GlobalPhone directory
Conda environment 'lid' active.
Model not found in /home/paul/gp-data/lre_tr_500_en_500/nnet
Running with training languages: AR BG CH CR CZ FR GE JA KO PL PO RU SP SW TH TU WU VN
Running with enrollment languages: AR BG CH CR CZ FR GE JA KO PL PO RU SP SW TH TU WU VN
Running with evaluation languages: AR BG CH CR CZ FR GE JA KO PL PO RU SP SW TH TU WU VN
Running with test languages: AR BG CH CR CZ FR GE JA KO PL PO RU SP SW TH TU WU VN
No augmentation done
The experiment directory is: /home/paul/gp-data/lre_tr_500_en_5000
Setting up preprocessed data
Finished running
#### STAGE 3: Preprocessing for X-vector training examples. ####
./local/prepare_feats_for_egs.sh --nj 40 --cmd run.pl /home/paul/gp-data/lre_tr_500_en_5000/train /home/paul/gp-data/lre_tr_500_en_5000/nnet_train_data /home/paul/gp-data/lre_tr_500_en_5000/x_vector_features
Paul's machine, don't need GlobalPhone directory
Conda environment 'lid' active.
974
./local/prepare_feats_for_egs.sh: Succeeded creating xvector features for train
utils/data/get_utt2num_frames.sh: /home/paul/gp-data/lre_tr_500_en_5000/nnet_train_data/utt2num_frames already present!
fix_data_dir.sh: kept all 974 utterances.
fix_data_dir.sh: old files are kept in /home/paul/gp-data/lre_tr_500_en_5000/nnet_train_data/.backup
Finished stage 3.
#### STAGE 4: Training the X-vector DNN. ####
Running locally.
Paul's machine, don't need GlobalPhone directory
Conda environment 'lid' active.
Running locally.
Taking data from: /home/paul/gp-data/lre_tr_500_en_5000/nnet_train_data
Storing training examples in: /home/paul/gp-data/lre_tr_500_en_5000/nnet/egs
Storing TDNN in: /home/paul/gp-data/lre_tr_500_en_5000/nnet
#### STAGE 4: Getting NN training egs. ####
./local/get_egs.sh --cmd run.pl --nj 144 --stage 0 --frames-per-iter 50000000 --frames-per-iter-diagnostic 100000 --min-frames-per-chunk 150 --max-frames-per-chunk 250 --num-diagnostic-archives 3 --num-repeats 35 /home/paul/gp-data/lre_tr_500_en_5000/nnet_train_data /home/paul/gp-data/lre_tr_500_en_5000/nnet/egs
Paul's machine, don't need GlobalPhone directory
Conda environment 'lid' active.
./local/get_egs.sh: Preparing train and validation lists
./local/get_egs.sh: Producing 101 archives for training
./local/get_egs.sh: Reducing num-jobs 144 to number of training archives 101
./local/get_egs.sh: Allocating training examples
./local/get_egs.sh: Allocating training subset examples
./local/get_egs.sh: Allocating validation examples
./local/get_egs.sh: Generating training examples on disk
./local/get_egs.sh: Generating training subset examples on disk
./local/get_egs.sh: Generating validation examples on disk
./local/get_egs.sh: Shuffling order of archives on disk
./local/get_egs.sh: Finished preparing training examples
#### STAGE 5: Creating NN configs using the xconfig parser. ####
./local/run_xvector.sh: creating neural net configs using the xconfig parser
#### STAGE 6: Training the network. ####
/home/paul/gp-data/lre_tr_500_en_5000/nnet: num-iters=235 nj=3..3 num-params=4.5M dim=23->18 combine=-0.02->-0.02 (over 7) loglike:train/valid[155,234]=(-0.0168,-0.0127/-1.49,-1.49) accuracy:train/valid[155,234]=(1.0000,1.0000/0.59,0.61)
steps/nnet3/train_raw_dnn.py --stage=-1 --cmd=run.pl --trainer.optimization.proportional-shrink 10 --trainer.optimization.momentum=0.5 --trainer.optimization.num-jobs-initial=3 --trainer.optimization.num-jobs-final=3 --trainer.optimization.initial-effective-lrate=0.0001 --trainer.optimization.final-effective-lrate=0.0001 --trainer.optimization.minibatch-size=64 --trainer.srand=123 --trainer.max-param-change=2 --trainer.num-epochs=7 --trainer.dropout-schedule=0,0@0.20,0.1@0.50,0 --trainer.shuffle-buffer-size=1000 --egs.frames-per-eg=1 --egs.dir=/home/paul/gp-data/lre_tr_500_en_5000/nnet/egs --cleanup.remove-egs false --cleanup.preserve-model-interval=10 --use-gpu=wait --dir=/home/paul/gp-data/lre_tr_500_en_5000/nnet
['steps/nnet3/train_raw_dnn.py', '--stage=-1', '--cmd=run.pl', '--trainer.optimization.proportional-shrink', '10', '--trainer.optimization.momentum=0.5', '--trainer.optimization.num-jobs-initial=3', '--trainer.optimization.num-jobs-final=3', '--trainer.optimization.initial-effective-lrate=0.0001', '--trainer.optimization.final-effective-lrate=0.0001', '--trainer.optimization.minibatch-size=64', '--trainer.srand=123', '--trainer.max-param-change=2', '--trainer.num-epochs=7', '--trainer.dropout-schedule=0,0@0.20,0.1@0.50,0', '--trainer.shuffle-buffer-size=1000', '--egs.frames-per-eg=1', '--egs.dir=/home/paul/gp-data/lre_tr_500_en_5000/nnet/egs', '--cleanup.remove-egs', 'false', '--cleanup.preserve-model-interval=10', '--use-gpu=wait', '--dir=/home/paul/gp-data/lre_tr_500_en_5000/nnet']
Finished stage 4.
#### STAGE 7: Extracting X-vectors from the trained DNN. ####
./local/extract_xvectors.sh --cmd run.pl --mem 6G --use-gpu wait --nj 1 --stage 0 --remove-nonspeech false /home/paul/gp-data/lre_tr_500_en_5000/nnet /home/paul/gp-data/lre_tr_500_en_5000/enroll /home/paul/gp-data/lre_tr_500_en_5000/exp/xvectors_enroll
./local/extract_xvectors.sh --cmd run.pl --mem 6G --use-gpu wait --nj 1 --stage 0 --remove-nonspeech false /home/paul/gp-data/lre_tr_500_en_5000/nnet /home/paul/gp-data/lre_tr_500_en_5000/eval /home/paul/gp-data/lre_tr_500_en_5000/exp/xvectors_eval
Paul's machine, don't need GlobalPhone directory
Conda environment 'lid' active.
Paul's machine, don't need GlobalPhone directory
Conda environment 'lid' active.
./local/extract_xvectors.sh: using /home/paul/gp-data/lre_tr_500_en_5000/nnet/extract.config to extract xvectors
./local/extract_xvectors.sh: using /home/paul/gp-data/lre_tr_500_en_5000/nnet/extract.config to extract xvectors
Removing features with less than 100 frames...
Removing features with less than 100 frames...
fix_data_dir.sh: kept 10698 utterances out of 10727
fix_data_dir.sh: kept 14921 utterances out of 14986
fix_data_dir.sh: old files are kept in /home/paul/gp-data/lre_tr_500_en_5000/exp/xvectors_enroll/.backup
fix_data_dir.sh: old files are kept in /home/paul/gp-data/lre_tr_500_en_5000/exp/xvectors_eval/.backup
./local/extract_xvectors.sh: extracting xvectors for /home/paul/gp-data/lre_tr_500_en_5000/enroll (taking lists of utts from /home/paul/gp-data/lre_tr_500_en_5000/exp/xvectors_enroll)
./local/extract_xvectors.sh: extracting xvectors from nnet
./local/extract_xvectors.sh: extracting xvectors for /home/paul/gp-data/lre_tr_500_en_5000/eval (taking lists of utts from /home/paul/gp-data/lre_tr_500_en_5000/exp/xvectors_eval)
./local/extract_xvectors.sh: extracting xvectors from nnet
./local/extract_xvectors.sh: combining xvectors across jobs
./local/extract_xvectors.sh: computing mean of xvectors for each language
./local/extract_xvectors.sh: combining xvectors across jobs
./local/extract_xvectors.sh: computing mean of xvectors for each language
Finished stage 7.
#### STAGE 8: Training logistic regression classifier and classifying test utterances. ####
Finished stage 8.
#### STAGE 9: Calculating results. ####
Accuracy: 0.609 (9083/14921 classified correctly)
Confusion matrix:
    AR   BG   CH   CR   CZ   FR   GE   JA   KO   PL   PO   RU   SP   SW   TH   TU   WU   VN  
AR  154  2    6    2    2    0    2    0    2    5    58   110  17   57   1    14   1    0   
BG  0    498  0    19   18   3    4    14   1    149  77   28   1    10   5    0    2    1   
CH  24   2    457  5    22   4    3    20   65   17   9    35   9    29   16   11   2    3   
CR  4    12   1    196  37   3    10   0    13   25   19   129  79   37   0    40   0    0   
CZ  7    8    5    8    515  7    7    3    20   290  25   30   2    47   26   28   0    2   
FR  21   1    5    12   1    596  6    1    0    37   5    89   12   43   0    10   0    0   
GE  55   0    10   8    15   1    579  6    2    46   121  114  4    74   0    37   1    0   
JA  7    7    119  0    32   2    35   80   46   0    5    2    5    1    1    7    0    0   
KO  22   3    47   19   34   11   0    45   480  2    15   23   33   49   2    18   0    3   
PL  1    21   1    4    8    1    0    1    1    944  2    21   1    3    5    1    0    7   
PO  5    10   29   10   6    2    23   5    7    19   305  91   64   55   6    5    0    1   
RU  7    16   71   180  30   64   5    9    27   80   85   642  91   36   1    38   10   1   
SP  31   4    1    16   19   12   0    0    13   5    17   126  238  144  1    41   1    0   
SW  5    8    2    82   17   23   6    1    18   19   11   115  40   830  7    23   0    0   
TH  6    11   6    0    4    0    1    16   20   4    0    5    1    3    1099 0    0    5   
TU  0    2    4    43   38   4    0    1    62   30   5    116  34   66   0    336  0    0   
WU  0    0    83   3    2    3    3    4    3    0    4    7    16   23   0    2    53   0   
VN  0    3    4    2    19   14   0    4    13   1    0    0    5    5    4    5    1    1081
C_primary value: 0.564
Finished stage 9.
