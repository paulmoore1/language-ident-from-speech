+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	 This shell script runs the GlobalPhone+X-vectors recipe.
 	 Use like this: ./gp-xvectors-recipe/run.sh <options>
 	 --home-dir=DIRECTORY	Main directory where recipe is stored 	 --config=FILE	Config file with all kinds of options,
 	 			see conf/exp_default.conf for an example.
 	 			NOTE: Where arguments are passed on the command line,
 	 			the values overwrite those found in the config file.

 	 If no stage number is provided, either all stages
 	 will be run (--run-all=true) or no stages at all.
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Running experiment: 'da_aug_tr_500'
Running all stages starting with 1.
Running locally.
Paul's machine, don't need GlobalPhone directory
Conda environment 'lid' active.
Training model as normal
Running with training languages: AR BG CH CR CZ FR GE JA KO PL PO RU SP SW TH TU VN
Running with enrollment languages: AR BG CH CR CZ FR GE JA KO PL PO RU SP SW TH TU VN
Running with evaluation languages: AR BG CH CR CZ FR GE JA KO PL PO RU SP SW TH TU VN
Running with test languages: AR BG CH CR CZ FR GE JA KO PL PO RU SP SW TH TU VN
The experiment directory is: /home/paul/gp-data/da_aug_tr_500_2
Setting up preprocessed data
Finished running
#### STAGE 3: Preprocessing for X-vector training examples. ####
./local/prepare_feats_for_egs.sh --nj 40 --cmd run.pl /home/paul/gp-data/da_aug_tr_500_2/train_aug /home/paul/gp-data/da_aug_tr_500_2/nnet_train_data /home/paul/gp-data/da_aug_tr_500_2/x_vector_features
Paul's machine, don't need GlobalPhone directory
Conda environment 'lid' active.
2784
./local/prepare_feats_for_egs.sh: Succeeded creating xvector features for train_aug
utils/data/get_utt2num_frames.sh: /home/paul/gp-data/da_aug_tr_500_2/nnet_train_data/utt2num_frames already present!
fix_data_dir.sh: kept all 2784 utterances.
fix_data_dir.sh: old files are kept in /home/paul/gp-data/da_aug_tr_500_2/nnet_train_data/.backup
Finished stage 3.
#### STAGE 4: Training the X-vector DNN. ####
Running locally.
Paul's machine, don't need GlobalPhone directory
Conda environment 'lid' active.
Running locally.
Taking data from: /home/paul/gp-data/da_aug_tr_500_2/nnet_train_data
Storing training examples in: /home/paul/gp-data/da_aug_tr_500_2/nnet/egs
Storing TDNN in: /home/paul/gp-data/da_aug_tr_500_2/nnet
#### STAGE 4: Getting NN training egs. ####
./local/get_egs.sh --cmd run.pl --nj 144 --stage 0 --frames-per-iter 50000000 --frames-per-iter-diagnostic 100000 --min-frames-per-chunk 150 --max-frames-per-chunk 250 --num-diagnostic-archives 3 --num-repeats 35 /home/paul/gp-data/da_aug_tr_500_2/nnet_train_data /home/paul/gp-data/da_aug_tr_500_2/nnet/egs
Paul's machine, don't need GlobalPhone directory
Conda environment 'lid' active.
./local/get_egs.sh: Preparing train and validation lists
./local/get_egs.sh: Producing 99 archives for training
./local/get_egs.sh: Reducing num-jobs 144 to number of training archives 99
./local/get_egs.sh: Allocating training examples
./local/get_egs.sh: Allocating training subset examples
./local/get_egs.sh: Allocating validation examples
./local/get_egs.sh: Generating training examples on disk
./local/get_egs.sh: Generating training subset examples on disk
./local/get_egs.sh: Generating validation examples on disk
./local/get_egs.sh: Shuffling order of archives on disk
./local/get_egs.sh: Finished preparing training examples
#### STAGE 5: Creating NN configs using the xconfig parser. ####
./local/run_xvector.sh: creating neural net configs using the xconfig parser
#### STAGE 6: Training the network. ####
