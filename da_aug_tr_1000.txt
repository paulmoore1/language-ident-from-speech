+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	 This shell script runs the GlobalPhone+X-vectors recipe.
 	 Use like this: ./gp-xvectors-recipe/run.sh <options>
 	 --home-dir=DIRECTORY	Main directory where recipe is stored 	 --config=FILE	Config file with all kinds of options,
 	 			see conf/exp_default.conf for an example.
 	 			NOTE: Where arguments are passed on the command line,
 	 			the values overwrite those found in the config file.

 	 If no stage number is provided, either all stages
 	 will be run (--run-all=true) or no stages at all.
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Running experiment: 'da_aug_tr_1000'
Running all stages starting with 1.
Running locally.
Paul's machine, don't need GlobalPhone directory
Conda environment 'lid' active.
Training model as normal
Running with training languages: AR BG CH CR CZ FR GE JA KO PL PO RU SP SW TH TU VN
Running with enrollment languages: AR BG CH CR CZ FR GE JA KO PL PO RU SP SW TH TU VN
Running with evaluation languages: AR BG CH CR CZ FR GE JA KO PL PO RU SP SW TH TU VN
Running with test languages: AR BG CH CR CZ FR GE JA KO PL PO RU SP SW TH TU VN
The experiment directory is: /home/paul/gp-data/da_aug_tr_1000_2
Setting up preprocessed data
Finished running
#### STAGE 3: Preprocessing for X-vector training examples. ####
./local/prepare_feats_for_egs.sh --nj 40 --cmd run.pl /home/paul/gp-data/da_aug_tr_1000_2/train_aug /home/paul/gp-data/da_aug_tr_1000_2/nnet_train_data /home/paul/gp-data/da_aug_tr_1000_2/x_vector_features
Paul's machine, don't need GlobalPhone directory
Conda environment 'lid' active.
5682
./local/prepare_feats_for_egs.sh: Succeeded creating xvector features for train_aug
utils/data/get_utt2num_frames.sh: /home/paul/gp-data/da_aug_tr_1000_2/nnet_train_data/utt2num_frames already present!
fix_data_dir.sh: kept all 5682 utterances.
fix_data_dir.sh: old files are kept in /home/paul/gp-data/da_aug_tr_1000_2/nnet_train_data/.backup
Finished stage 3.
#### STAGE 4: Training the X-vector DNN. ####
Running locally.
Paul's machine, don't need GlobalPhone directory
Conda environment 'lid' active.
Running locally.
Taking data from: /home/paul/gp-data/da_aug_tr_1000_2/nnet_train_data
Storing training examples in: /home/paul/gp-data/da_aug_tr_1000_2/nnet/egs
Storing TDNN in: /home/paul/gp-data/da_aug_tr_1000_2/nnet
#### STAGE 4: Getting NN training egs. ####
./local/get_egs.sh --cmd run.pl --nj 144 --stage 0 --frames-per-iter 50000000 --frames-per-iter-diagnostic 100000 --min-frames-per-chunk 150 --max-frames-per-chunk 250 --num-diagnostic-archives 3 --num-repeats 35 /home/paul/gp-data/da_aug_tr_1000_2/nnet_train_data /home/paul/gp-data/da_aug_tr_1000_2/nnet/egs
Paul's machine, don't need GlobalPhone directory
Conda environment 'lid' active.
./local/get_egs.sh: Preparing train and validation lists
./local/get_egs.sh: Producing 99 archives for training
./local/get_egs.sh: Reducing num-jobs 144 to number of training archives 99
./local/get_egs.sh: Allocating training examples
./local/get_egs.sh: Allocating training subset examples
./local/get_egs.sh: Allocating validation examples
./local/get_egs.sh: Generating training examples on disk
./local/get_egs.sh: Generating training subset examples on disk
./local/get_egs.sh: Generating validation examples on disk
./local/get_egs.sh: Shuffling order of archives on disk
./local/get_egs.sh: Finished preparing training examples
#### STAGE 5: Creating NN configs using the xconfig parser. ####
./local/run_xvector.sh: creating neural net configs using the xconfig parser
#### STAGE 6: Training the network. ####
/home/paul/gp-data/da_aug_tr_1000_2/nnet: num-iters=231 nj=3..3 num-params=4.5M dim=23->34 combine=-0.03->-0.03 (over 2) loglike:train/valid[153,230]=(-0.035,-0.030/-1.41,-1.46) accuracy:train/valid[153,230]=(1.0000,1.0000/0.63,0.63)
steps/nnet3/train_raw_dnn.py --stage=-1 --cmd=run.pl --trainer.optimization.proportional-shrink 10 --trainer.optimization.momentum=0.5 --trainer.optimization.num-jobs-initial=3 --trainer.optimization.num-jobs-final=3 --trainer.optimization.initial-effective-lrate=0.0001 --trainer.optimization.final-effective-lrate=0.0001 --trainer.optimization.minibatch-size=64 --trainer.srand=123 --trainer.max-param-change=2 --trainer.num-epochs=7 --trainer.dropout-schedule=0,0@0.20,0.1@0.50,0 --trainer.shuffle-buffer-size=1000 --egs.frames-per-eg=1 --egs.dir=/home/paul/gp-data/da_aug_tr_1000_2/nnet/egs --cleanup.remove-egs false --cleanup.preserve-model-interval=10 --use-gpu=wait --dir=/home/paul/gp-data/da_aug_tr_1000_2/nnet
['steps/nnet3/train_raw_dnn.py', '--stage=-1', '--cmd=run.pl', '--trainer.optimization.proportional-shrink', '10', '--trainer.optimization.momentum=0.5', '--trainer.optimization.num-jobs-initial=3', '--trainer.optimization.num-jobs-final=3', '--trainer.optimization.initial-effective-lrate=0.0001', '--trainer.optimization.final-effective-lrate=0.0001', '--trainer.optimization.minibatch-size=64', '--trainer.srand=123', '--trainer.max-param-change=2', '--trainer.num-epochs=7', '--trainer.dropout-schedule=0,0@0.20,0.1@0.50,0', '--trainer.shuffle-buffer-size=1000', '--egs.frames-per-eg=1', '--egs.dir=/home/paul/gp-data/da_aug_tr_1000_2/nnet/egs', '--cleanup.remove-egs', 'false', '--cleanup.preserve-model-interval=10', '--use-gpu=wait', '--dir=/home/paul/gp-data/da_aug_tr_1000_2/nnet']
Finished stage 4.
#### STAGE 7: Extracting X-vectors from the trained DNN. ####
./local/extract_xvectors.sh --cmd run.pl --mem 6G --use-gpu wait --nj 1 --stage 0 --remove-nonspeech false /home/paul/gp-data/da_aug_tr_1000_2/nnet /home/paul/gp-data/da_aug_tr_1000_2/enroll /home/paul/gp-data/da_aug_tr_1000_2/exp/xvectors_enroll
./local/extract_xvectors.sh --cmd run.pl --mem 6G --use-gpu wait --nj 1 --stage 0 --remove-nonspeech false /home/paul/gp-data/da_aug_tr_1000_2/nnet /home/paul/gp-data/da_aug_tr_1000_2/eval /home/paul/gp-data/da_aug_tr_1000_2/exp/xvectors_eval
Paul's machine, don't need GlobalPhone directory
Paul's machine, don't need GlobalPhone directory
Conda environment 'lid' active.
Conda environment 'lid' active.
./local/extract_xvectors.sh: using /home/paul/gp-data/da_aug_tr_1000_2/nnet/extract.config to extract xvectors
./local/extract_xvectors.sh: using /home/paul/gp-data/da_aug_tr_1000_2/nnet/extract.config to extract xvectors
Removing features with less than 100 frames...
Removing features with less than 100 frames...
fix_data_dir.sh: kept 10517 utterances out of 10537
fix_data_dir.sh: kept 14715 utterances out of 14780
fix_data_dir.sh: old files are kept in /home/paul/gp-data/da_aug_tr_1000_2/exp/xvectors_enroll/.backup
fix_data_dir.sh: old files are kept in /home/paul/gp-data/da_aug_tr_1000_2/exp/xvectors_eval/.backup
./local/extract_xvectors.sh: extracting xvectors for /home/paul/gp-data/da_aug_tr_1000_2/enroll (taking lists of utts from /home/paul/gp-data/da_aug_tr_1000_2/exp/xvectors_enroll)
./local/extract_xvectors.sh: extracting xvectors from nnet
./local/extract_xvectors.sh: extracting xvectors for /home/paul/gp-data/da_aug_tr_1000_2/eval (taking lists of utts from /home/paul/gp-data/da_aug_tr_1000_2/exp/xvectors_eval)
./local/extract_xvectors.sh: extracting xvectors from nnet
./local/extract_xvectors.sh: combining xvectors across jobs
./local/extract_xvectors.sh: computing mean of xvectors for each language
./local/extract_xvectors.sh: combining xvectors across jobs
./local/extract_xvectors.sh: computing mean of xvectors for each language
Finished stage 7.
#### STAGE 8: Training logistic regression classifier and classifying test utterances. ####
Finished stage 8.
#### STAGE 9: Calculating results. ####
Accuracy: 0.768 (11294/14715 classified correctly)
Confusion matrix:
    AR   BG   CH   CR   CZ   FR   GE   JA   KO   PL   PO   RU   SP   SW   TH   TU   VN  
AR  249  0    14   16   1    0    0    2    1    6    22   51   35   32   1    3    0   
BG  1    654  0    9    9    0    4    2    0    107  41   2    0    0    1    0    0   
CH  12   1    567  0    4    0    0    12   77   9    13   19   4    6    4    5    0   
CR  1    0    0    357  9    1    6    0    4    16   6    96   50   23   0    36   0   
CZ  2    5    2    8    737  0    2    7    0    217  12   10   3    5    19   1    0   
FR  3    0    3    0    1    762  0    0    0    44   1    12   2    4    0    7    0   
GE  51   1    16   4    49   0    687  3    0    52   50   134  1    4    0    21   0   
JA  0    2    86   1    1    3    1    225  12   0    1    2    5    4    1    5    0   
KO  0    2    33   8    6    2    1    72   619  0    3    8    29   15   0    8    0   
PL  0    4    0    7    2    1    2    1    0    962  0    35   0    5    2    0    1   
PO  1    3    3    17   4    0    2    0    2    2    433  53   40   78   1    2    2   
RU  0    3    24   127  26   17   1    8    8    50   51   1008 24   6    0    40   0   
SP  22   1    0    14   5    1    0    0    6    8    13   101  339  153  0    6    0   
SW  4    3    0    110  10   2    2    1    3    15   10   87   42   899  0    19   0   
TH  17   0    3    0    0    0    1    2    9    2    0    0    0    1    1145 0    1   
TU  1    2    2    62   19   0    0    2    61   11   30   31   11   8    0    501  0   
VN  0    3    0    0    0    4    0    0    3    0    0    0    1    0    0    0    1150
C_primary value: 0.331
Finished stage 9.
